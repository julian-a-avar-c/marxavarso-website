---
import { config as mainConfig } from "@/config/main";
import { config as pageConfig } from "@/config/pages/index";
const config = {
  main: mainConfig,
  page: pageConfig,
};
import { productos } from "@/config/productos";

import { cn } from "@/lib/utils";
import { Icon } from "astro-icon/components";

import Layout from "@/layouts/Layout.astro";
import Header from "@/components/layout/Header.astro";
import Footer from "@/components/layout/Footer.astro";

import Content80 from "@/components/section/new/Content80.astro";
import ProportionalBento from "@/components/section/new/ProportionalBento.astro";

import Hero from "@/components/section/new/page/index/Hero.astro";

import { Button } from "@/components/ui/button";
import { Accordion } from "@/components/my-ui/accordion";
import { Input } from "@/components/ui/input";
import { LogoBelt } from "@/components/section/new/LogoBelt";
import LabeledAccordion from "@/components/my-ui/LabeledAccordion.astro";

import { HeaderNav } from "@/components/layout/HeaderNav";
import { DisplayCarousel } from "@/components/my-ui/page/index/display-carousel";
import { ProductCarousel } from "@/components/my-ui/product-carousel";
import { Badge } from "@/components/ui/badge";

function randomIntFromInterval(min: number, max: number) {
  // min and max included
  return Math.floor(Math.random() * (max - min + 1) + min);
}

export function getStaticPaths() {
  productos.map((producto) => ({ params: { productId: producto.id } }));
  return productos.map((producto) => ({ params: { productId: producto.id } }));
}

const { productId } = Astro.params;
const producto = productos.find(({ id }) => id === productId)!;
---

<Layout title={producto.nombre} class={cn("w-full")}>
  <Header />

  <main
    class={cn(
      "col-[fullbleed]",
      "grid grid-cols-subgrid",
      "pt-[calc(var(--section-padding)/2)]"
    )}
  >
    <section
      class={cn(
        "col-[fullbleed] md:col-[content]",
        "grid grid-cols-1 md:grid-cols-2",
        "gap-(--section-padding)"
      )}
    >
      <ProductCarousel imagenes={producto.imagenes} client:only="react" />

      <div class="flex flex-col gap-4">
        <h1 class="text-5xl font-bold">{producto.nombre}</h1>
        <div class="text-4xl">{producto.precio}</div>
        <div class="flex gap-2">
        {
          producto.categorias.length > 0 &&
            producto.categorias.map((categoria) => (
              <Badge
                variant="default"
                className={cn("bg-accent text-accent-foreground rounded-none", {
                  "bg-red-400": categoria === "oferta",
                })}
              >
                {categoria}
              </Badge>
            ))
        }
        </div>
        <div><a>Ver más detalles</a></div>

        {
          producto.talles && (
            <div class="flex gap-4 items-center">
              <div>Talle:</div>
              <div class="flex gap-2">
                {producto.talles.map((talle) => (
                  <Button className="bg-accent">{talle}</Button>
                ))}
              </div>
            </div>
          )
        }
        <Button className="bg-accent">Agregar al Carrito</Button>

        <div class="flex">
          <Icon name="fa6-solid:circle-info" />
          <p>
            A la hora de pagar es importante mandar el comprobante en
            @maori.accs con su número de pedido.
          </p>
        </div>
      </div>
    </section>
  </main>

  <footer>???</footer>
</Layout>
